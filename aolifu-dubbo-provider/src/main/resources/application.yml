server:
  port: 10004

dubbo:
  registry:
    address: nacos://127.0.0.1:8848
  application:
    name: aolifu-dubbo-provider
  protocol:
    port: 20880

spring:
  application:
    name: aolifu-dubbo-provider

  dynamic:
    thread-pool:
      enable: true  # 是否开启动态线程池
      banner: true  # 是否打印 banner
      collect: true  # 是否开启线程池数据采集，对接 Prometheus
      notify-platforms: # 通知报警平台
        - platform: 'DING'  # 钉钉
          token: 56417ebba6a27ca352f0de77a2ae9da66d01f39610b5ee8a6033c60ef9071c55
          secret: SEC40943de20b51e993b47e9a55490a168f1c9e00bdb4f0fb15b1d9e4b58f8b05f3  # 加签
        # tomcat:
        # jetty:
        # undertow
      tomcat: # 三种容器线程池，任选其一
        core-pool-size: 100
        maximum-pool-size: 200
        keep-alive-time: 1000
        # 全局通知配置
      alarm: true  # 是否报警
      check-state-interval: 3000  # 检查线程池状态，是否达到报警条件，单位毫秒
      active-alarm: 80  # 活跃度报警阈值；假设线程池最大线程数 10，当线程数达到 8 发起报警
      capacity-alarm: 80  # 容量报警阈值；假设阻塞队列容量 100，当容量达到 80 发起报警
      alarm-interval: 8  # 报警间隔，同一线程池下同一报警纬度，在 interval 时间内只会报警一次，单位秒
      receive: xxx
      # 省略其它配置
      adapter-executors:
        # threadPoolKey 代表线程池标识
        - threadPoolKey: 'dubbo-provider'
          # mark 为三方线程池框架类型，参见文初已支持框架集合
          mark: 'Dubbo'
          corePoolSize: 50
          maximumPoolSize: 50
            # 线程池配置
      executors:
          - thread-pool-id: 'custom-provider'  # 线程池标识
            core-pool-size: 10  # 核心线程数
            maximum-pool-size: 10  # 最大线程数
            queue-capacity: 10  # 阻塞队列大小
            execute-time-out: 1000  # 执行超时时间，超过此时间发起报警
            blocking-queue: 'LinkedBlockingQueue'  # 阻塞队列名称，参考 QueueTypeEnum，支持 SPI
            rejected-handler: 'AbortPolicy'  # 拒绝策略名称，参考 RejectedPolicies，支持 SPI
            keep-alive-time: 1024  # 线程存活时间，单位秒
            allow-core-thread-time-out: true  # 是否允许核心线程超时
            thread-name-prefix: 'dubbo-provider'  # 线程名称前缀
      collect-type: metric

management:
  metrics:
    export:
      prometheus:
        enabled: true
  server:
    port: 30001 # 自选
  endpoints:
    web:
      exposure:
        include: '*' # 测试使用，开启了所有端点，生产环境不建议 *